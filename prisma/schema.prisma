generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            Int      @id @default(autoincrement())
  password      String   @db.VarChar(255)
  active        Boolean  @default(true)
  email         String   @unique @db.VarChar(40)
  phone         String   @unique @db.VarChar(10)
  firstName     String   @db.VarChar(40)
  lastName      String   @db.VarChar(40)
  idInstitucion Int
  Institucion   Institucion @relation(fields: [idInstitucion], references: [id], onDelete: SetNull)
  proyectos     UsuarioProyecto[]
  bitacoras     Bitacora[]
}

model Proyecto {
  id          Int               @id @default(autoincrement())
  name        String            @db.VarChar(60)
  description String
  active      Boolean           @default(true)
  usuarios       UsuarioProyecto[]
}

model UsuarioProyecto {
  idUsuario   Int
  idProyecto  Int
  Usuario     Usuario @relation(fields: [idUsuario], references: [id], onDelete: Cascade)
  Proyecto    Proyecto @relation(fields: [idProyecto], references: [id], onDelete: Cascade)
  @@id([idUsuario, idProyecto])
}

model Screen {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(30)
  bitacoras   Bitacora[]
}

model Bitacora {
  idUsuario Int
  idScreen  Int
  dateTime  DateTime  @default(now())
  Usuario   Usuario   @relation(fields: [idUsuario], references: [id], onDelete: Cascade)
  Screen    Screen?   @relation(fields: [idScreen], references: [id], onDelete: Cascade)

  @@id([idUsuario, idScreen])
}

model Institucion {
  id      Int       @id @default(autoincrement())
  name    String    @unique @db.VarChar(60)
  usuarios Usuario[]
}

